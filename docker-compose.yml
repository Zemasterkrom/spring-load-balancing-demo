version: '2'

services:
  lddatabase:
    image: postgres:15.1-alpine
    restart: unless-stopped
    container_name: lddatabase
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /data/lds
    volumes:
      - lddatabase:/data/lds
    ports:
      - ${DB_PORT}:5432

  ldconfig:
    build: ./ldconfig
    image: ldconfig
    restart: unless-stopped
    container_name: ldconfig
    environment:
      - GIT_CONFIG_REPOSITORY=${GIT_CONFIG_REPOSITORY}
      - GIT_CONFIG_BRANCH=${GIT_CONFIG_BRANCH:-}
    volumes:
      - ./ldconfig/src/main/resources/application.properties:/usr/ldconfig/application.properties
      - ./ldconfig/server/docker/config:/usr/ldconfig/config # Necessary for Docker Desktop because host variables are not saved in containers: they are determined at runtime when the execution script is run
    ports:
      - ${CONFIG_SERVER_PORT}:8888

  ldservice:
    build: ./ldservice
    image: ldservice
    restart: unless-stopped
    container_name: ldservice
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - EUREKA_SERVERS_URLS=${EUREKA_SERVERS_URLS}
      - API_ALLOWED_ORIGINS=${API_ALLOWED_ORIGINS}
      - API_HOSTNAME=${API_HOSTNAME:-}
      - CONTAINER_NAME_ID=ldservice # The container ID is required because several APIs can be executed. This is linked to Docker Desktop, which does not persist system-related variables.
    volumes:
      - ./ldservice/src/main/resources/application.properties:/usr/ldservice/application.properties
      - ./ldservice/server/docker/config/ldservice:/usr/ldservice/config/ldservice # Necessary for Docker Desktop because host variables are not saved in containers: they are determined at runtime when the execution script is run
    ports:
      - ${API_SERVER_PORT}:8080
    depends_on:
      - ldconfig
      - lddatabase
      - ldloadbalancer
      - lddiscovery

  ldservice-two:
    build: ./ldservice
    image: ldservice
    restart: unless-stopped
    container_name: ldservice-two
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - EUREKA_SERVERS_URLS=${EUREKA_SERVERS_URLS}
      - API_ALLOWED_ORIGINS=${API_ALLOWED_ORIGINS}
      - API_HOSTNAME=${API_TWO_HOSTNAME:-}
      - CONTAINER_NAME_ID=ldservice_two # The container ID is required because several APIs can be executed. This is linked to Docker Desktop, which does not persist system-related variables.
    ports:
      - ${API_TWO_SERVER_PORT}:8080
    volumes:
      - ./ldservice/src/main/resources/application.properties:/usr/ldservice/application.properties
      - ./ldservice/server/docker/config/ldservice_two:/usr/ldservice/config/ldservice_two # Necessary for Docker Desktop because host variables are not saved in containers: they are determined at runtime when the execution script is run
    depends_on:
      - ldconfig
      - lddatabase
      - ldloadbalancer
      - lddiscovery

  ldfront:
    build: ./ldfront
    image: ldfront
    restart: unless-stopped
    container_name: ldfront
    environment:
      - API_URL=${API_URL}
      - TEST_API_URL=${TEST_API_URL}
    volumes:
      - ./ldfront/src/assets:/usr/share/nginx/html/assets
      - ./ldfront/server/docker/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - ${FRONT_SERVER_PORT}:80

  ldloadbalancer:
    build: ./ldloadbalancer
    image: ldloadbalancer
    restart: unless-stopped
    container_name: ldloadbalancer
    environment:
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - EUREKA_SERVERS_URLS=${EUREKA_SERVERS_URLS}
      - LOADBALANCER_ALLOWED_ORIGINS=${LOADBALANCER_ALLOWED_ORIGINS}
      - LOADBALANCER_HOSTNAME=${LOADBALANCER_HOSTNAME:-}
    ports:
      - ${LOADBALANCER_SERVER_PORT}:10000
    volumes:
      - ./ldloadbalancer/src/main/resources/application.properties:/usr/ldloadbalancer/application.properties
      - ./ldloadbalancer/server/docker/config:/usr/ldloadbalancer/config # Necessary for Docker Desktop because host variables are not saved in containers: they are determined at runtime when the execution script is run
    depends_on:
      - ldconfig
      - lddiscovery

  lddiscovery:
    build: ./lddiscovery
    image: lddiscovery
    restart: unless-stopped
    container_name: lddiscovery
    environment:
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
    ports:
      - ${DISCOVERY_SERVER_PORT}:9999
    volumes:
      - ./lddiscovery/src/main/resources/application.properties:/usr/lddiscovery/application.properties
    depends_on:
      - ldconfig

volumes:
  lddatabase: